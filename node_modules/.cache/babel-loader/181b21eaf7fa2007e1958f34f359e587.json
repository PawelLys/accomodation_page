{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\Offer\\\\calendar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { arrivalSelectedDate } from '../actions';\n\nclass calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedMonth: moment().month(),\n      selectedYear: moment().year()\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n    this.years = [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029];\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.currentDate = () => this.state.dateContext.get(\"date\");\n\n    this.currentDay = () => this.state.dateContext.format(\"D\");\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.weekdays = () => {\n      return this.weekdaysShort.map(day => {\n        return React.createElement(\"td\", {\n          key: day,\n          className: \"week-day\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, day);\n      });\n    };\n\n    this.nextMonth = () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(1, \"month\");\n      this.setState({\n        dateContext,\n        selectedMonth: moment(dateContext).get('month'),\n        selectedYear: moment(dateContext).get('year')\n      });\n      this.props.onNextMonth && this.props.onNextMonth();\n    };\n\n    this.prevMonth = () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).subtract(1, \"month\");\n      this.setState({\n        dateContext,\n        selectedMonth: moment(dateContext).get('month'),\n        selectedYear: moment(dateContext).get('year')\n      });\n      this.props.onPrevMonth && this.props.onPrevMonth();\n    };\n\n    this.onChangeMonth = () => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext,\n        selectedMonth: monthNo\n      });\n    };\n\n    this.onSelectChange = (e, data) => {\n      e.preventDefault();\n      this.setMonth(data);\n    };\n\n    this.MonthNav = () => {\n      return React.createElement(\"div\", {\n        className: \"label-month\",\n        onClick: () => this.onChangeMonth(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.month(), React.createElement(\"div\", {\n        className: \"month-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.state.showMonthPopup && this.months.map((month, index) => {\n        return React.createElement(\"div\", {\n          key: month,\n          className: \"month-popup-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: e => this.onSelectChange(e, month),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, month));\n      })));\n    };\n\n    this.onChangeYear = () => {\n      this.setState({\n        showYearPopup: !this.state.showYearPopup\n      });\n    };\n\n    this.setYear = year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext\n      });\n    };\n\n    this.onChangeYear = () => {\n      this.setState({\n        showYearPopup: !this.state.showYearPopup\n      });\n    };\n\n    this.setYear = year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext,\n        selectedYear: moment(dateContext).get('year')\n      });\n    };\n\n    this.onSelectYear = (e, data) => {\n      e.preventDefault();\n      this.setYear(data);\n    };\n\n    this.YearNav = () => {\n      return React.createElement(\"div\", {\n        className: \"label-year\",\n        onClick: () => this.onChangeYear(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.year(), React.createElement(\"div\", {\n        className: \"year-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.showYearPopup && this.years.map(year => {\n        return React.createElement(\"div\", {\n          key: year,\n          className: \"year-popup-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: e => this.onSelectYear(e, year),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, year));\n      })));\n    };\n\n    this.onDayClick = day => {\n      this.props.arrivalSelectedDate(day, this.state.selectedMonth, this.state.selectedYear);\n    };\n\n    this.width = props.width || '35rem';\n    this.style = props.style || {};\n    this.style.width = this.width;\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  // call action creator and set this day in state in redux as well as this.selectedMonth && selectedYear\n  render() {\n    const blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        className: \"emptySlot\",\n        key: i * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    ;\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d == this.currentDay() && this.state.selectedMonth === moment().month() && this.state.selectedYear === moment().year() ? \"day current-day\" : \"day\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => this.onDayClick(d),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, d)));\n    }\n\n    ;\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    const trElems = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(\"div\", {\n      className: \"calendar \".concat(this.props.arrivalCalendar ? '' : 'calendar-hidden'),\n      style: this.style,\n      ref: this.setWrapperRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"ion-icon\", {\n      name: \"arrow-round-back\",\n      onClick: this.prevMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), this.MonthNav(), \" \", this.YearNav(), React.createElement(\"ion-icon\", {\n      className: \"calendar-header-arrow_right\",\n      name: \"arrow-round-forward\",\n      onClick: this.nextMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"calendar-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"calendar-main-weekdays\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, this.weekdays())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, trElems)));\n  }\n\n}\n\n;\n\nconst mapStateToProp = state => {\n  return {\n    arrivalCalendar: state.displayCalendars.arrivalCalendar\n  };\n};\n\nexport default connect(mapStateToProp, {\n  arrivalSelectedDate\n})(calendar);","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\Offer\\calendar.js"],"names":["React","connect","moment","arrivalSelectedDate","calendar","Component","constructor","props","state","dateContext","today","showMonthPopup","showYearPopup","selectedMonth","month","selectedYear","year","weekdaysShort","months","years","format","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","weekdays","map","day","nextMonth","Object","assign","add","setState","onNextMonth","prevMonth","subtract","onPrevMonth","onChangeMonth","setMonth","monthNo","indexOf","set","onSelectChange","e","data","preventDefault","MonthNav","index","onChangeYear","setYear","onSelectYear","YearNav","onDayClick","width","style","setWrapperRef","node","wrapperRef","render","blanks","i","push","d","className","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","arrivalCalendar","mapStateToProp","displayCalendars"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,mBAAT,QAAoC,YAApC;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAOnBC,KAPmB,GAOX;AAAEC,MAAAA,WAAW,EAAEP,MAAM,EAArB;AAAyBQ,MAAAA,KAAK,EAAER,MAAM,EAAtC;AAA0CS,MAAAA,cAAc,EAAE,KAA1D;AAAiEC,MAAAA,aAAa,EAAE,KAAhF;AACJC,MAAAA,aAAa,EAAEX,MAAM,GAAGY,KAAT,EADX;AAC6BC,MAAAA,YAAY,EAAEb,MAAM,GAAGc,IAAT;AAD3C,KAPW;AAAA,SAcnBC,aAdmB,GAcHf,MAAM,CAACe,aAAP,EAdG;AAAA,SAenBC,MAfmB,GAeVhB,MAAM,CAACgB,MAAP,EAfU;AAAA,SAgBnBC,KAhBmB,GAgBX,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,CAhBW;;AAAA,SAkBnBH,IAlBmB,GAkBZ,MAAM,KAAKR,KAAL,CAAWC,WAAX,CAAuBW,MAAvB,CAA8B,GAA9B,CAlBM;;AAAA,SAoBnBN,KApBmB,GAoBX,MAAM,KAAKN,KAAL,CAAWC,WAAX,CAAuBW,MAAvB,CAA8B,MAA9B,CApBK;;AAAA,SAsBnBC,WAtBmB,GAsBL,MAAM,KAAKb,KAAL,CAAWC,WAAX,CAAuBY,WAAvB,EAtBD;;AAAA,SAwBnBC,WAxBmB,GAwBL,MAAM,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B,MAA3B,CAxBD;;AAAA,SA0BnBC,UA1BmB,GA0BN,MAAM,KAAKhB,KAAL,CAAWC,WAAX,CAAuBW,MAAvB,CAA8B,GAA9B,CA1BA;;AAAA,SA4BnBK,eA5BmB,GA4BD,MAAMvB,MAAM,CAAC,KAAKM,KAAL,CAAWC,WAAZ,CAAN,CAA+BiB,OAA/B,CAAuC,OAAvC,EAAgDN,MAAhD,CAAuD,GAAvD,CA5BL;;AAAA,SA8BnBO,QA9BmB,GA8BR,MAAM;AACb,aAAO,KAAKV,aAAL,CAAmBW,GAAnB,CAAuBC,GAAG,IAAI;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAc,UAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCA,GAApC,CAAP;AACH,OAFM,CAAP;AAGH,KAlCkB;;AAAA,SAoCnBC,SApCmB,GAoCP,MAAM;AACd,UAAIrB,WAAW,GAAGsB,MAAM,CAAEC,MAAR,CAAe,EAAf,EAAmB,KAAKxB,KAAL,CAAWC,WAA9B,CAAlB;AACAA,MAAAA,WAAW,GAAGP,MAAM,CAACO,WAAD,CAAN,CAAoBwB,GAApB,CAAwB,CAAxB,EAA2B,OAA3B,CAAd;AACA,WAAKC,QAAL,CAAc;AAAEzB,QAAAA,WAAF;AAAeI,QAAAA,aAAa,EAAEX,MAAM,CAACO,WAAD,CAAN,CAAoBc,GAApB,CAAwB,OAAxB,CAA9B;AACVR,QAAAA,YAAY,EAAEb,MAAM,CAACO,WAAD,CAAN,CAAoBc,GAApB,CAAwB,MAAxB;AADJ,OAAd;AAEA,WAAKhB,KAAL,CAAW4B,WAAX,IAA0B,KAAK5B,KAAL,CAAW4B,WAAX,EAA1B;AACH,KA1CkB;;AAAA,SA4CnBC,SA5CmB,GA4CP,MAAM;AACd,UAAI3B,WAAW,GAAGsB,MAAM,CAAEC,MAAR,CAAe,EAAf,EAAmB,KAAKxB,KAAL,CAAWC,WAA9B,CAAlB;AACAA,MAAAA,WAAW,GAAGP,MAAM,CAACO,WAAD,CAAN,CAAoB4B,QAApB,CAA6B,CAA7B,EAAgC,OAAhC,CAAd;AACA,WAAKH,QAAL,CAAc;AAAEzB,QAAAA,WAAF;AAAeI,QAAAA,aAAa,EAAEX,MAAM,CAACO,WAAD,CAAN,CAAoBc,GAApB,CAAwB,OAAxB,CAA9B;AACVR,QAAAA,YAAY,EAAEb,MAAM,CAACO,WAAD,CAAN,CAAoBc,GAApB,CAAwB,MAAxB;AADJ,OAAd;AAEA,WAAKhB,KAAL,CAAW+B,WAAX,IAA0B,KAAK/B,KAAL,CAAW+B,WAAX,EAA1B;AACH,KAlDkB;;AAAA,SAoDnBC,aApDmB,GAoDH,MAAM;AAClB,WAAKL,QAAL,CAAc;AAAEvB,QAAAA,cAAc,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAA9B,OAAd;AACH,KAtDkB;;AAAA,SAwDnB6B,QAxDmB,GAwDP1B,KAAD,IAAW;AAClB,YAAM2B,OAAO,GAAG,KAAKvB,MAAL,CAAYwB,OAAZ,CAAoB5B,KAApB,CAAhB;AACA,UAAIL,WAAW,GAAGsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWC,WAA7B,CAAlB;AACAA,MAAAA,WAAW,GAAGP,MAAM,CAACO,WAAD,CAAN,CAAoBkC,GAApB,CAAwB,OAAxB,EAAiCF,OAAjC,CAAd;AACA,WAAKP,QAAL,CAAc;AAAEzB,QAAAA,WAAF;AAAeI,QAAAA,aAAa,EAAE4B;AAA9B,OAAd;AACH,KA7DkB;;AAAA,SA+DnBG,cA/DmB,GA+DF,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAC1BD,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKP,QAAL,CAAcM,IAAd;AACH,KAlEkB;;AAAA,SAoEnBE,QApEmB,GAoER,MAAM;AACb,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAE,MAAM,KAAKT,aAAL,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKzB,KAAL,EADL,EAGI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,KAAL,CAAWG,cAAX,IAA6B,KAAKO,MAAL,CAAYU,GAAZ,CAAgB,CAACd,KAAD,EAAQmC,KAAR,KAAkB;AAC5D,eACI;AAAK,UAAA,GAAG,EAAEnC,KAAV;AAAiB,UAAA,SAAS,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAG+B,CAAD,IAAO,KAAKD,cAAL,CAAoBC,CAApB,EAAuB/B,KAAvB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,KADL,CADR,CADJ;AAOH,OAR6B,CADlC,CAHJ,CADJ;AAiBH,KAtFkB;;AAAA,SAwFnBoC,YAxFmB,GAwFJ,MAAM;AACjB,WAAKhB,QAAL,CAAc;AAAEtB,QAAAA,aAAa,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAA7B,OAAd;AACH,KA1FkB;;AAAA,SA2FnBuC,OA3FmB,GA2FRnC,IAAD,IAAU;AAChB,UAAIP,WAAW,GAAGsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWC,WAA7B,CAAlB;AACAA,MAAAA,WAAW,GAAGP,MAAM,CAACO,WAAD,CAAN,CAAoBkC,GAApB,CAAwB,MAAxB,EAAgC3B,IAAhC,CAAd;AACA,WAAKkB,QAAL,CAAc;AAAEzB,QAAAA;AAAF,OAAd;AACH,KA/FkB;;AAAA,SAgGnByC,YAhGmB,GAgGJ,MAAM;AACjB,WAAKhB,QAAL,CAAc;AAAEtB,QAAAA,aAAa,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAA7B,OAAd;AACH,KAlGkB;;AAAA,SAoGnBuC,OApGmB,GAoGRnC,IAAD,IAAU;AAChB,UAAIP,WAAW,GAAGsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxB,KAAL,CAAWC,WAA7B,CAAlB;AACAA,MAAAA,WAAW,GAAGP,MAAM,CAACO,WAAD,CAAN,CAAoBkC,GAApB,CAAwB,MAAxB,EAAgC3B,IAAhC,CAAd;AACA,WAAKkB,QAAL,CAAc;AAAEzB,QAAAA,WAAF;AAAeM,QAAAA,YAAY,EAAEb,MAAM,CAACO,WAAD,CAAN,CAAoBc,GAApB,CAAwB,MAAxB;AAA7B,OAAd;AACH,KAxGkB;;AAAA,SAyGnB6B,YAzGmB,GAyGJ,CAACP,CAAD,EAAIC,IAAJ,KAAa;AACxBD,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKI,OAAL,CAAaL,IAAb;AACH,KA5GkB;;AAAA,SA6GnBO,OA7GmB,GA6GT,MAAM;AACZ,aACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,OAAO,EAAE,MAAM,KAAKH,YAAL,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKlC,IAAL,EADD,EAGgB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKR,KAAL,CAAWI,aAAX,IAA4B,KAAKO,KAAL,CAAWS,GAAX,CAAeZ,IAAI,IAAI;AAChD,eACI;AAAK,UAAA,GAAG,EAAEA,IAAV;AAAgB,UAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAG6B,CAAD,IAAO,KAAKO,YAAL,CAAkBP,CAAlB,EAAqB7B,IAArB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IADL,CADR,CADJ;AAOH,OAR4B,CADjC,CAHhB,CADJ;AAiBH,KA/HkB;;AAAA,SAiInBsC,UAjImB,GAiINzB,GAAG,IAAI;AAChB,WAAKtB,KAAL,CAAWJ,mBAAX,CAA+B0B,GAA/B,EAAoC,KAAKrB,KAAL,CAAWK,aAA/C,EAA8D,KAAKL,KAAL,CAAWO,YAAzE;AACH,KAnIkB;;AAEf,SAAKwC,KAAL,GAAahD,KAAK,CAACgD,KAAN,IAAe,OAA5B;AACA,SAAKC,KAAL,GAAajD,KAAK,CAACiD,KAAN,IAAe,EAA5B;AACA,SAAKA,KAAL,CAAWD,KAAX,GAAmB,KAAKA,KAAxB;AACH;;AAKDE,EAAAA,aAAa,CAACC,IAAD,EAAO;AAChB,SAAKC,UAAL,GAAkBD,IAAlB;AACH;;AAwHG;AAGJE,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKrC,eAAL,EAAnB,EAA2CqC,CAAC,EAA5C,EAAgD;AAC5CD,MAAAA,MAAM,CAACE,IAAP,CACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,GAAG,EAAED,CAAC,GAAC,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,EADL,CADJ;AAKH;;AAAA;AAED,UAAMzC,WAAW,GAAG,EAApB;;AACA,SAAI,IAAI2C,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,KAAK3C,WAAL,EAApB,EAAwC2C,CAAC,EAAzC,EAA6C;AACzC,UAAIC,SAAS,GAAID,CAAC,IAAI,KAAKxC,UAAL,EAAL,IACb,KAAKhB,KAAL,CAAWK,aAAX,KAA6BX,MAAM,GAAGY,KAAT,EADhB,IACoC,KAAKN,KAAL,CAAWO,YAAX,KAA4Bb,MAAM,GAAGc,IAAT,EADhE,GAEX,iBAFW,GAES,KAF1B;AAGAK,MAAAA,WAAW,CAAC0C,IAAZ,CACI;AAAI,QAAA,GAAG,EAAEC,CAAT;AAAY,QAAA,SAAS,EAAEC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKX,UAAL,CAAgBU,CAAhB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CA,CAA1C,CADJ,CADJ;AAKH;;AAAA;AAED,UAAME,UAAU,GAAG,CAAC,GAAIL,MAAL,EAAa,GAAGxC,WAAhB,CAAnB;AACA,UAAM8C,IAAI,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAF,IAAAA,UAAU,CAACG,OAAX,CAAmB,CAACC,GAAD,EAAMR,CAAN,KAAY;AAC3B,UAAIA,CAAC,GAAG,CAAL,KAAY,CAAf,EAAkB;AACdM,QAAAA,KAAK,CAACL,IAAN,CAAWO,GAAX;AACH,OAFD,MAEO;AACH,cAAMC,SAAS,GAAGH,KAAK,CAACI,KAAN,EAAlB;AACAL,QAAAA,IAAI,CAACJ,IAAL,CAAUQ,SAAV;AACAH,QAAAA,KAAK,GAAG,EAAR;AACAA,QAAAA,KAAK,CAACL,IAAN,CAAWO,GAAX;AACH;;AACD,UAAGR,CAAC,KAAKI,UAAU,CAACO,MAAX,GAAoB,CAA7B,EAAgC;AAC5B,cAAMF,SAAS,GAAGH,KAAK,CAACI,KAAN,EAAlB;AACAL,QAAAA,IAAI,CAACJ,IAAL,CAAUQ,SAAV;AACH;AACJ,KAbD;AAeA,UAAMG,OAAO,GAAGP,IAAI,CAACvC,GAAL,CAAS,CAACoC,CAAD,EAAIF,CAAJ,KAAU;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaE,CAAb,CAAP;AACH,KAFe,CAAhB;AAIA,WACI;AAAK,MAAA,SAAS,qBAAc,KAAKzD,KAAL,CAAWoE,eAAX,GAA6B,EAA7B,GAAkC,iBAAhD,CAAd;AACI,MAAA,KAAK,EAAE,KAAKnB,KADhB;AACuB,MAAA,GAAG,EAAE,KAAKC,aADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACgB;AAAU,MAAA,IAAI,EAAC,kBAAf;AACI,MAAA,OAAO,EAAE,KAAKrB,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,EAIiB,KAAKY,QAAL,EAJjB,EAKiB,GALjB,EAMiB,KAAKK,OAAL,EANjB,EAOgB;AAAU,MAAA,SAAS,EAAC,6BAApB;AAAkD,MAAA,IAAI,EAAC,qBAAvD;AACI,MAAA,OAAO,EAAE,KAAKvB,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPhB,CAHJ,EAcI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,QAAL,EADL,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK+C,OADL,CANJ,CAdJ,CADJ;AA2BH;;AA/MkC;;AAgNtC;;AAED,MAAME,cAAc,GAAGpE,KAAK,IAAI;AAC5B,SAAO;AAAEmE,IAAAA,eAAe,EAAEnE,KAAK,CAACqE,gBAAN,CAAuBF;AAA1C,GAAP;AACH,CAFD;;AAIA,eAAe1E,OAAO,CAAC2E,cAAD,EAAiB;AAAEzE,EAAAA;AAAF,CAAjB,CAAP,CAAiDC,QAAjD,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { arrivalSelectedDate } from '../actions';\r\n\r\nclass calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = props.width || '35rem';\r\n        this.style = props.style || {};\r\n        this.style.width = this.width;\r\n    }\r\n\r\n    state = { dateContext: moment(), today: moment(), showMonthPopup: false, showYearPopup: false, \r\n        selectedMonth: moment().month(), selectedYear: moment().year() };\r\n\r\n    setWrapperRef(node) {\r\n        this.wrapperRef = node;\r\n    }\r\n\r\n    weekdaysShort = moment.weekdaysShort();\r\n    months = moment.months();\r\n    years = [2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029];\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    currentDate = () => this.state.dateContext.get(\"date\");\r\n\r\n    currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    weekdays = () => {\r\n        return this.weekdaysShort.map(day => {\r\n            return <td key={day} className=\"week-day\">{day}</td>\r\n        });\r\n    };\r\n\r\n    nextMonth = () => {\r\n        let dateContext = Object. assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(1, \"month\");\r\n        this.setState({ dateContext, selectedMonth: moment(dateContext).get('month'), \r\n            selectedYear: moment(dateContext).get('year') });\r\n        this.props.onNextMonth && this.props.onNextMonth();\r\n    };\r\n\r\n    prevMonth = () => {\r\n        let dateContext = Object. assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).subtract(1, \"month\");\r\n        this.setState({ dateContext, selectedMonth: moment(dateContext).get('month'), \r\n            selectedYear: moment(dateContext).get('year') });\r\n        this.props.onPrevMonth && this.props.onPrevMonth();\r\n    }\r\n\r\n    onChangeMonth = () => {\r\n        this.setState({ showMonthPopup: !this.state.showMonthPopup });\r\n    };\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({ dateContext, selectedMonth: monthNo });\r\n    };\r\n\r\n    onSelectChange = (e, data) => {\r\n        e.preventDefault();\r\n        this.setMonth(data);\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <div className=\"label-month\" onClick={() => this.onChangeMonth()}>\r\n                {this.month()}\r\n                \r\n                <div className=\"month-popup\">\r\n                    {this.state.showMonthPopup && this.months.map((month, index) => {\r\n                        return (\r\n                            <div key={month} className=\"month-popup-item\"> \r\n                                    <a href=\"#\" onClick={(e) => this.onSelectChange(e, month)}>\r\n                                        {month}\r\n                                    </a>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onChangeYear = () => {\r\n        this.setState({ showYearPopup: !this.state.showYearPopup });\r\n    }\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({ dateContext });\r\n    }\r\n    onChangeYear = () => {\r\n        this.setState({ showYearPopup: !this.state.showYearPopup });\r\n    }\r\n\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({ dateContext, selectedYear: moment(dateContext).get('year') });\r\n    };\r\n    onSelectYear = (e, data) => {\r\n        e.preventDefault();\r\n        this.setYear(data);\r\n    };\r\n    YearNav = () => {\r\n        return (\r\n            <div className=\"label-year\" onClick={() => this.onChangeYear()}>\r\n            {this.year()}\r\n                            \r\n                            <div className=\"year-popup\">\r\n                                {this.state.showYearPopup && this.years.map(year => {\r\n                                    return (\r\n                                        <div key={year} className=\"year-popup-item\">\r\n                                                <a href=\"#\" onClick={(e) => this.onSelectYear(e, year)}>\r\n                                                    {year}\r\n                                                </a>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n            </div>\r\n        ); \r\n    };\r\n\r\n    onDayClick = day => {\r\n        this.props.arrivalSelectedDate(day, this.state.selectedMonth, this.state.selectedYear);\r\n    };\r\n        // call action creator and set this day in state in redux as well as this.selectedMonth && selectedYear\r\n    \r\n\r\n    render() {\r\n        const blanks = [];\r\n        for(let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(\r\n                <td className=\"emptySlot\" key={i*10}>\r\n                    {\"\"}\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const daysInMonth = [];\r\n        for(let d = 1; d <= this.daysInMonth(); d++) {\r\n            let className = (d == this.currentDay() && \r\n                this.state.selectedMonth === moment().month() && this.state.selectedYear === moment().year()\r\n                ? \"day current-day\" : \"day\");\r\n            daysInMonth.push(\r\n                <td key={d} className={className}>\r\n                    <span onClick={() => this.onDayClick(d)}>{d}</span>\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const totalSlots = [... blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n        totalSlots.forEach((row, i) => {\r\n            if((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if(i === totalSlots.length - 1) {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n\r\n        const trElems = rows.map((d, i) => {\r\n            return <tr key={i}>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <div className={`calendar ${this.props.arrivalCalendar ? '' : 'calendar-hidden'}`} \r\n                style={this.style} ref={this.setWrapperRef}\r\n            >\r\n                <div className=\"calendar-header\">\r\n                                <ion-icon name=\"arrow-round-back\"\r\n                                    onClick={this.prevMonth}\r\n                                />\r\n                                {this.MonthNav()}\r\n                                {\" \"}\r\n                                {this.YearNav()}\r\n                                <ion-icon className=\"calendar-header-arrow_right\" name=\"arrow-round-forward\"\r\n                                    onClick={this.nextMonth}\r\n                                />\r\n                </div>\r\n                <table className=\"calendar-main\" > \r\n                    <thead>\r\n                        <tr className=\"calendar-main-weekdays\">\r\n                            {this.weekdays()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {trElems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProp = state => {\r\n    return { arrivalCalendar: state.displayCalendars.arrivalCalendar };\r\n}\r\n\r\nexport default connect(mapStateToProp, { arrivalSelectedDate })(calendar);"]},"metadata":{},"sourceType":"module"}