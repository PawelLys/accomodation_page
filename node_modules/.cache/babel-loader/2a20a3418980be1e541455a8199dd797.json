{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\ContactForm.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { mealsIncludeReset } from './actions';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isChecked,\n      displayAfterSubmitting: false\n    };\n\n    this.renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\n\n    this.renderElement = formProps => {\n      const meta = formProps.meta;\n      if (formProps.input.name === 'email') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Your email:\", React.createElement(\"input\", Object.assign({\n        type: \"email\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })));else if (formProps.input.name === 'country') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Your country of residence:\", React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })));else if (formProps.input.name === 'phoneNumber') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Your phone number:\", React.createElement(\"input\", Object.assign({\n        type: \"number\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));else if (formProps.input.name === 'message') return React.createElement(\"div\", {\n        className: \"feedback_form-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Your message:\", React.createElement(\"textarea\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Contact us\"));else return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, formProps.label, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    };\n\n    this.onSubmitBtn = formValues => {\n      console.log('dziala');\n      console.log(formValues); //this.props.createNewAccount({...formValues, id});\n      //this.setState({ newAccountSuccessful: true });\n    };\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"feedback_intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Any questions? If so then we would gladly clarify everything for you.\"), React.createElement(\"form\", {\n      className: \"feedback_form\",\n      onSubmit: this.props.handleSubmit(this.onSubmitBtn.bind(this)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"firstName\",\n      component: this.renderElement,\n      label: \"Your first name:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"lastName\",\n      component: this.renderElement,\n      label: \"Your last name:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-date_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Your gender:\", React.createElement(\"div\", {\n      className: \"form-date_item-gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"male\",\n      checked: this.state.isChecked,\n      onClick: () => this.setState({\n        isChecked: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"Male\", React.createElement(Field, {\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"female\",\n      checked: !this.state.isChecked,\n      onClick: () => this.setState({\n        isChecked: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \"Female\")), React.createElement(Field, {\n      name: \"email\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"country\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"phoneNumber\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"message\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nconst validate = formValues => {\n  const error = {};\n  if (!formValues.firstName) error.firstName = 'Input your first name here';\n  if (!formValues.lastName) error.lastName = 'Input your last name here';\n  if (!formValues.email) error.email = 'Input your email here';\n  if (!formValues.country) error.country = 'Input your country here';\n  if (!formValues.phoneNumber) error.phoneNumber = 'Input your phone number here';else {\n    if (formValues.phoneNumber.length !== 9) error.phoneNumber = 'Phone number should have 9 digits';\n  }\n  ;\n  if (!formValues.message) error.message = 'Input your message here';\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    userAcc: state.hoverConfig\n  };\n};\n\nconst formWrapped = reduxForm({\n  form: 'ContactForm',\n  validate\n})(ContactForm);\nexport default connect(mapStateToProps, {\n  mealsIncludeReset\n})(formWrapped);","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\ContactForm.js"],"names":["React","Field","reduxForm","connect","isEmpty","mealsIncludeReset","ContactForm","Component","state","isChecked","displayAfterSubmitting","renderError","meta","touched","error","active","renderElement","formProps","input","name","label","onSubmitBtn","formValues","console","log","render","props","handleSubmit","bind","setState","validate","firstName","lastName","email","country","phoneNumber","length","message","mapStateToProps","userAcc","hoverConfig","formWrapped","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport { mealsIncludeReset } from './actions';\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {  isChecked ,displayAfterSubmitting: false,  };\r\n\r\n    renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\r\n\r\n    renderElement = formProps => {\r\n        const { meta } = formProps;\r\n        if (formProps.input.name === 'email')\r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your email:<input type=\"email\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'country') \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your country of residence:<input type=\"text\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'phoneNumber') \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your phone number:<input type=\"number\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'message') \r\n            return (\r\n                <div className=\"feedback_form-message\">\r\n                    Your message:<textarea type=\"text\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                    <button className=\"form-btn\">Contact us</button>\r\n                </div>\r\n            );\r\n        else \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    {formProps.label}<input type=\"text\" placeholder={this.renderError(meta)}\r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}\r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n    };\r\n\r\n    onSubmitBtn = formValues => {\r\n        console.log('dziala');\r\n        console.log(formValues);\r\n        //this.props.createNewAccount({...formValues, id});\r\n        //this.setState({ newAccountSuccessful: true });\r\n    };\r\n    \r\n    render() {\r\n        return(\r\n            <section className=\"feedback\"> \r\n                <div className=\"feedback_intro\">\r\n                    Any questions? If so then we would gladly clarify everything for you.\r\n                </div>\r\n                <form className=\"feedback_form\" onSubmit={this.props.handleSubmit(this.onSubmitBtn.bind(this))}>\r\n                    <div className=\"form-date\">\r\n                        <Field name=\"firstName\" component={this.renderElement} label=\"Your first name:\" />\r\n                        <Field name=\"lastName\" component={this.renderElement} label=\"Your last name:\" />\r\n                        <div className=\"form-date_item\">Your gender: \r\n                            <div className=\"form-date_item-gender\">\r\n                                <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"male\" \r\n                                    checked={this.state.isChecked}  onClick={() => this.setState({ isChecked: true })} \r\n                                />Male\r\n                                <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"female\" \r\n                                    checked={!this.state.isChecked} onClick={() => this.setState({ isChecked: false })} \r\n                                />Female\r\n                            </div>\r\n                        </div>\r\n                        <Field name=\"email\" component={this.renderElement} />\r\n                        <Field name=\"country\" component={this.renderElement} />\r\n                        <Field name=\"phoneNumber\" component={this.renderElement} />\r\n                    </div>\r\n                    <Field name=\"message\" component={this.renderElement} />\r\n                </form>\r\n            </section>\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = formValues => {\r\n    const error = {};\r\n\r\n    if(!formValues.firstName) error.firstName = 'Input your first name here';\r\n    if(!formValues.lastName) error.lastName = 'Input your last name here';\r\n    if(!formValues.email) error.email = 'Input your email here';\r\n    if(!formValues.country) error.country = 'Input your country here';\r\n    if(!formValues.phoneNumber) error.phoneNumber = 'Input your phone number here';\r\n    else {\r\n        if(formValues.phoneNumber.length !== 9) error.phoneNumber = 'Phone number should have 9 digits';\r\n    };\r\n    if(!formValues.message) error.message = 'Input your message here';\r\n\r\n    return error;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { userAcc: state.hoverConfig };\r\n};\r\n\r\nconst formWrapped = reduxForm({\r\n    form: 'ContactForm', validate\r\n})(ContactForm);\r\n\r\nexport default connect(mapStateToProps, { mealsIncludeReset })(formWrapped);"]},"metadata":{},"sourceType":"module"}