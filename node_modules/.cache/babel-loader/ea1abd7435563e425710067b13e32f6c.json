{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\NavBar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Spring } from 'react-spring/renderprops';\nimport { hoverNav } from './actions';\n\nclass NavBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headerHover: false,\n      visible: true\n    };\n\n    this.componentDidUpdate = () => !this.props.hoverConfig.hoverShouldShow ? this.props.hoverNav(false) : null;\n\n    this.handleScroll = () => {\n      this.setState({\n        visible: document.querySelector(\".submain\").offsetTop > window.pageYOffset\n      });\n    };\n\n    this.changeHeaderHover = () => {\n      this.setState({\n        headerHover: !this.state.headerHover\n      });\n      if (this.state.headerHover) this.props.hoverNav(false);\n    };\n\n    this.changeHoverTrue = () => {\n      if (this.props.hoverConfig.hoverShouldShow) this.props.hoverNav(true);\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  }\n\n  render() {\n    return React.createElement(Spring, {\n      from: {\n        opacity: 0\n      },\n      to: {\n        opacity: 1\n      },\n      config: {\n        duration: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, props => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"More info\")));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    hover: state.headerState,\n    hoverConfig: state.hoverConfig\n  };\n};\n\nexport default connect(mapStateToProps, {\n  hoverNav\n})(NavBar);","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\NavBar.js"],"names":["React","connect","Link","Spring","hoverNav","NavBar","Component","state","headerHover","visible","componentDidUpdate","props","hoverConfig","hoverShouldShow","handleScroll","setState","document","querySelector","offsetTop","window","pageYOffset","changeHeaderHover","changeHoverTrue","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","opacity","duration","mapStateToProps","console","log","hover","headerState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AAAEC,MAAAA,WAAW,EAAE,KAAf;AAAsBC,MAAAA,OAAO,EAAE;AAA/B,KADyB;;AAAA,SAWjCC,kBAXiC,GAWZ,MAAM,CAAC,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,eAAxB,GAA0C,KAAKF,KAAL,CAAWP,QAAX,CAAoB,KAApB,CAA1C,GAAuE,IAXjE;;AAAA,SAajCU,YAbiC,GAalB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEO,QAAQ,CAACC,aAAT,aAAmCC,SAAnC,GAA+CC,MAAM,CAACC;AAAjE,OAAd;AACH,KAfgC;;AAAA,SAiBjCC,iBAjBiC,GAiBb,MAAM;AACtB,WAAKN,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA3B,OAAd;AACA,UAAG,KAAKD,KAAL,CAAWC,WAAd,EAA2B,KAAKG,KAAL,CAAWP,QAAX,CAAoB,KAApB;AAC9B,KApBgC;;AAAA,SAsBjCkB,eAtBiC,GAsBf,MAAM;AACpB,UAAG,KAAKX,KAAL,CAAWC,WAAX,CAAuBC,eAA1B,EAA2C,KAAKF,KAAL,CAAWP,QAAX,CAAoB,IAApB;AAC9C,KAxBgC;AAAA;;AAGjCmB,EAAAA,iBAAiB,GAAG;AAChBJ,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,YAAvC;AACH;;AAEDW,EAAAA,oBAAoB,GAAG;AACnBN,IAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqC,KAAKZ,YAA1C;AACH;;AAiBDa,EAAAA,MAAM,GAAG;AACL,WACQ,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADV;AAEI,MAAA,EAAE,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAFR;AAGI,MAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKlB,KAAK,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAQ,MAAA,KAAK,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,CANR,CADR;AAYH;;AAvCgC;;AAwCpC;;AAED,MAAMmB,eAAe,GAAGvB,KAAK,IAAI;AAC7BwB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,KAAZ;AACA,SAAO;AAAE0B,IAAAA,KAAK,EAAE1B,KAAK,CAAC2B,WAAf;AAA4BtB,IAAAA,WAAW,EAAEL,KAAK,CAACK;AAA/C,GAAP;AACH,CAHD;;AAKA,eAAeX,OAAO,CAAC6B,eAAD,EAAkB;AAAE1B,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,MAAvC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport { hoverNav } from './actions';\r\n\r\nclass NavBar extends React.Component {\r\n    state = { headerHover: false, visible: true };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    };\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    };\r\n\r\n    componentDidUpdate = () => !this.props.hoverConfig.hoverShouldShow ? this.props.hoverNav(false) : null;\r\n    \r\n    handleScroll = () => {    \r\n        this.setState({ visible: document.querySelector(`.submain`).offsetTop > window.pageYOffset });\r\n    };\r\n\r\n    changeHeaderHover = () => {\r\n        this.setState({ headerHover: !this.state.headerHover });\r\n        if(this.state.headerHover) this.props.hoverNav(false);\r\n    };\r\n\r\n    changeHoverTrue = () => {\r\n        if(this.props.hoverConfig.hoverShouldShow) this.props.hoverNav(true);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n                <Spring\r\n                    from={{ opacity: 0 }}\r\n                    to={{ opacity: 1 }}\r\n                    config={{duration: 300}}\r\n                >\r\n                    {props => (\r\n                        <p><button style={props}>More info</button></p>\r\n                    )}\r\n                </Spring>\r\n                \r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { hover: state.headerState, hoverConfig: state.hoverConfig };\r\n}\r\n\r\nexport default connect(mapStateToProps, { hoverNav })(NavBar);"]},"metadata":{},"sourceType":"module"}