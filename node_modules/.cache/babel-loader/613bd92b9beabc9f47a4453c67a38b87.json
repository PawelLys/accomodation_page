{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\Offer\\\\calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { thisExpression } from '@babel/types';\n\nclass calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.currentDate = () => this.state.dateContext.get(\"date\");\n\n    this.currentDay = () => this.state.dateContext.format(\"D\");\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.weekdays = () => {\n      return this.weekdaysShort.map(day => {\n        return React.createElement(\"td\", {\n          key: day,\n          className: \"week-day\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, day);\n      });\n    };\n\n    this.onChangeMonth = (e, month) => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext\n      });\n    };\n\n    this.onSelectChange = (e, data) => {\n      this.setMonth(data);\n    };\n\n    this.MonthNav = () => {\n      return React.createElement(\"span\", {\n        className: \"label-month\",\n        onClick: e => this.onChangeMonth(e, this.month()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.month(), this.months.map(month => {\n        return React.createElement(\"ul\", {\n          key: month,\n          style: {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"month-popup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: e => this.onSelectChange(e, month),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, month)));\n      }));\n    };\n\n    this.width = props.width || '35rem';\n    this.style = props.style || {};\n    this.style.width = this.width;\n  }\n\n  render() {\n    const blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        className: \"emptySlot\",\n        key: i * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    ;\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      const className = d === this.currentDay() ? \"day current-day\" : \"day\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, d)));\n    }\n\n    ;\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    console.log(rows);\n    const trElems = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(\"div\", {\n      className: \"calendar-container\",\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.MonthNav()))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.weekdays()), trElems)));\n  }\n\n}\n\n;\nexport default calendar;","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\Offer\\calendar.js"],"names":["React","moment","thisExpression","calendar","Component","constructor","props","state","dateContext","today","showMonthPopup","showYearPopup","weekdaysShort","months","year","format","month","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","weekdays","map","day","onChangeMonth","e","setState","setMonth","monthNo","indexOf","Object","assign","set","onSelectChange","data","MonthNav","width","style","render","blanks","i","push","d","className","totalSlots","rows","cells","forEach","row","insertRow","slice","length","console","log","trElems"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport { thisExpression } from '@babel/types';\r\n\r\nclass calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = props.width || '35rem';\r\n        this.style = props.style || {};\r\n        this.style.width = this.width;\r\n    }\r\n\r\n    state = { dateContext: moment(), today: moment(), showMonthPopup: false, showYearPopup: false };\r\n\r\n    //weekdays = moment.weekdays(); \r\n    weekdaysShort = moment.weekdaysShort();\r\n    months = moment.months();\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    currentDate = () => this.state.dateContext.get(\"date\");\r\n\r\n    currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    weekdays = () => {\r\n        return this.weekdaysShort.map(day => {\r\n            return <td key={day} className=\"week-day\">{day}</td>\r\n        });\r\n    };\r\n\r\n    onChangeMonth = (e, month) => {\r\n        this.setState({ showMonthPopup: !this.state.showMonthPopup });\r\n    };\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({ dateContext });\r\n    };\r\n    onSelectChange = (e, data) => {\r\n        this.setMonth(data);\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span className=\"label-month\" onClick={(e) => this.onChangeMonth(e, this.month())}>\r\n                {this.month()}\r\n                {this.months.map(month => {\r\n                    return (\r\n                        <ul key={month} style={{  }}>\r\n                            <div className=\"month-popup\">\r\n                                <a href=\"#\" onClick={(e) => this.onSelectChange(e, month)}>\r\n                                    {month}\r\n                                </a>\r\n                            </div>\r\n                        </ul>\r\n                    );\r\n                })}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const blanks = [];\r\n        for(let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(\r\n                <td className=\"emptySlot\" key={i*10}>\r\n                    {\"\"}\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const daysInMonth = [];\r\n        for(let d = 1; d <= this.daysInMonth(); d++) {\r\n            const className = (d === this.currentDay() ? \"day current-day\" : \"day\");\r\n            daysInMonth.push(\r\n                <td key={d} className={className}>\r\n                    <span>{d}</span>\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const totalSlots = [... blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n        totalSlots.forEach((row, i) => {\r\n            if((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if(i === totalSlots.length - 1) {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n        console.log(rows);\r\n\r\n        const trElems = rows.map((d, i) => {\r\n            return <tr key={i}>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n            <div className=\"calendar-container\" style={this.style}>\r\n                <table className=\"calendar\">\r\n                    <thead>\r\n                        <tr className=\"calendar-header\">\r\n                            <td colSpan=\"5\">\r\n                                {this.MonthNav()}\r\n                            </td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {this.weekdays()}\r\n                        </tr>\r\n                        {trElems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default calendar;"]},"metadata":{},"sourceType":"module"}