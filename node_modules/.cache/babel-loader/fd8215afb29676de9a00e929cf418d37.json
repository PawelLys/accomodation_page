{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\Offer\\\\calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { thisExpression } from '@babel/types';\n\nclass calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.currentDate = () => this.state.dateContext.get(\"date\");\n\n    this.currentDay = () => this.state.dateContext.format(\"D\");\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.weekdays = () => {\n      return this.weekdaysShort.map(day => {\n        return React.createElement(\"td\", {\n          key: day,\n          className: \"week-day\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, day);\n      });\n    };\n\n    this.onChangeMonth = (e, month) => {\n      e.preventDefault();\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext\n      });\n    };\n\n    this.onSelectChange = (e, data) => {\n      e.preventDefault();\n      this.setMonth(data);\n    };\n\n    this.MonthNav = () => {\n      return React.createElement(\"span\", {\n        className: \"label-month\",\n        onClick: e => this.onChangeMonth(e, this.month()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.month(), React.createElement(\"div\", {\n        className: \"month-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.showMonthPopup && this.months.map(month => {\n        return React.createElement(\"div\", {\n          key: month,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: e => this.onSelectChange(e, month),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, month));\n      })));\n    };\n\n    this.showYearEditior = () => {\n      this.setState({\n        showYearNav: true\n      });\n    };\n\n    this.setYear = year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext\n      });\n    };\n\n    this.onChangeYear = (e, year) => {\n      e.preventDefault();\n      this.setState({\n        showYearPopup: !this.state.showYearPopup\n      });\n      this.setYear(e.target.value);\n      this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? React.createElement(\"input\", {\n        defaultValue: this.year(),\n        className: \"editor-year\",\n        ref: yearInput => this.yearInput = yearInput,\n        onClick: e => this.onChangeYear(e, this.year()),\n        type: \"number\",\n        placeholder: \"year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        className: \"label-year\",\n        onClick: () => this.showYearEditior(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-year\",\n        onClick: e => this.onChangeMonth(e, this.month()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.month(), React.createElement(\"div\", {\n        className: \"month-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.showMonthPopup && this.months.map(month => {\n        return React.createElement(\"div\", {\n          key: month,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          onClick: e => this.onSelectChange(e, month),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, month));\n      }))), this.year());\n    };\n\n    this.width = props.width || '35rem';\n    this.style = props.style || {};\n    this.style.width = this.width;\n  }\n\n  render() {\n    const blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        className: \"emptySlot\",\n        key: i * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    ;\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      const className = d === this.currentDay() ? \"day current-day\" : \"day\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, d)));\n    }\n\n    ;\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    const trElems = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, d);\n    });\n    return React.createElement(\"table\", {\n      className: \"calendar\",\n      style: this.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"calendar-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.MonthNav(), \" \", this.YearNav()))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.weekdays()), trElems));\n  }\n\n}\n\n;\nexport default calendar;","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\Offer\\calendar.js"],"names":["React","moment","thisExpression","calendar","Component","constructor","props","state","dateContext","today","showMonthPopup","showYearPopup","weekdaysShort","months","year","format","month","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","weekdays","map","day","onChangeMonth","e","preventDefault","setState","setMonth","monthNo","indexOf","Object","assign","set","onSelectChange","data","MonthNav","showYearEditior","showYearNav","setYear","onChangeYear","target","value","onYearChange","YearNav","yearInput","width","style","render","blanks","i","push","d","className","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport { thisExpression } from '@babel/types';\r\n\r\nclass calendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.width = props.width || '35rem';\r\n        this.style = props.style || {};\r\n        this.style.width = this.width;\r\n    }\r\n\r\n    state = { dateContext: moment(), today: moment(), showMonthPopup: false, showYearPopup: false };\r\n\r\n    //weekdays = moment.weekdays(); \r\n    weekdaysShort = moment.weekdaysShort();\r\n    months = moment.months();\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    currentDate = () => this.state.dateContext.get(\"date\");\r\n\r\n    currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    weekdays = () => {\r\n        return this.weekdaysShort.map(day => {\r\n            return <td key={day} className=\"week-day\">{day}</td>\r\n        });\r\n    };\r\n\r\n    onChangeMonth = (e, month) => {\r\n        e.preventDefault();\r\n        this.setState({ showMonthPopup: !this.state.showMonthPopup });\r\n    };\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({ dateContext });\r\n    };\r\n    onSelectChange = (e, data) => {\r\n        e.preventDefault();\r\n        this.setMonth(data);\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span className=\"label-month\" onClick={(e) => this.onChangeMonth(e, this.month())}>\r\n                {this.month()}\r\n                \r\n                <div className=\"month-popup\">\r\n                    {this.state.showMonthPopup && this.months.map(month => {\r\n                        return (\r\n                            <div key={month}>\r\n                                    <a href=\"#\" onClick={(e) => this.onSelectChange(e, month)}>\r\n                                        {month}\r\n                                    </a>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </span>\r\n        );\r\n    };\r\n\r\n    showYearEditior = () => {\r\n        this.setState({ showYearNav: true });\r\n    }\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({ dateContext });\r\n    }\r\n    onChangeYear = (e, year) => {\r\n        e.preventDefault();\r\n        this.setState({ showYearPopup: !this.state.showYearPopup });\r\n\r\n        this.setYear(e.target.value);\r\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\r\n    }\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav ?\r\n            <input defaultValue={this.year()} className=\"editor-year\" \r\n                ref={(yearInput) => this.yearInput = yearInput}\r\n                onClick={(e) => this.onChangeYear(e, this.year())}\r\n                type=\"number\" placeholder=\"year\"\r\n            />\r\n            :\r\n            <span className=\"label-year\" onClick={() => this.showYearEditior()}>\r\n                            <span className=\"label-year\" onClick={(e) => this.onChangeMonth(e, this.month())}>\r\n                            {this.month()}\r\n                            \r\n                            <div className=\"month-popup\">\r\n                                {this.state.showMonthPopup && this.months.map(month => {\r\n                                    return (\r\n                                        <div key={month}>\r\n                                                <a href=\"#\" onClick={(e) => this.onSelectChange(e, month)}>\r\n                                                    {month}\r\n                                                </a>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </span>\r\n                {this.year()}\r\n            </span>\r\n        ); \r\n    };\r\n\r\n    render() {\r\n        const blanks = [];\r\n        for(let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(\r\n                <td className=\"emptySlot\" key={i*10}>\r\n                    {\"\"}\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const daysInMonth = [];\r\n        for(let d = 1; d <= this.daysInMonth(); d++) {\r\n            const className = (d === this.currentDay() ? \"day current-day\" : \"day\");\r\n            daysInMonth.push(\r\n                <td key={d} className={className}>\r\n                    <span>{d}</span>\r\n                </td>\r\n            );\r\n        };\r\n\r\n        const totalSlots = [... blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n        totalSlots.forEach((row, i) => {\r\n            if((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if(i === totalSlots.length - 1) {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n\r\n        const trElems = rows.map((d, i) => {\r\n            return <tr key={i}>{d}</tr>;\r\n        });\r\n\r\n        return (\r\n                <table className=\"calendar\" style={this.style}> \r\n                    <thead>\r\n                        <tr className=\"calendar-header\">\r\n                            <td colSpan=\"5\">\r\n                                {this.MonthNav()}\r\n                                {\" \"}\r\n                                {this.YearNav()}\r\n                            </td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {this.weekdays()}\r\n                        </tr>\r\n                        {trElems}\r\n                    </tbody>\r\n                </table>\r\n        );\r\n    };\r\n};\r\n\r\nexport default calendar;"]},"metadata":{},"sourceType":"module"}