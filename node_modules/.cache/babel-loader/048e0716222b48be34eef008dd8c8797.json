{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nconst STATE_INIT = {\n  arrivalDate: [],\n  arrivalCalendar: false,\n  wrapperRef: undefined,\n  departureDate: [],\n  departureCalendar: false,\n  wrapperRefDepart: undefined\n};\nexport default ((state = STATE_INIT, action) => {\n  if (action.type === 'ARRIVAL_CALENDAR') return _objectSpread({}, state, {\n    arrivalCalendar: action.payload\n  });\n  if (action.type === 'ARRIVAL_DATE') return _objectSpread({}, state, {\n    arrivalDate: action.payload\n  });\n  if (action.type === 'ARRIVAL_CALENDAR_NODE') return _objectSpread({}, state, {\n    wrapperRef: action.payload\n  });\n  if (action.type === 'DEPARTURE_CALENDAR') return _objectSpread({}, state, {\n    departureCalendar: action.payload\n  });\n  if (action.type === 'DEPARTURE_DATE') return _objectSpread({}, state, {\n    departureDate: action.payload\n  });\n  if (action.type === 'DEPARTURE_CALENDAR_NODE') return _objectSpread({}, state, {\n    wrapperRefDepart: action.payload\n  });else return state;\n});","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\reducers\\displayCalendars.js"],"names":["STATE_INIT","arrivalDate","arrivalCalendar","wrapperRef","undefined","departureDate","departureCalendar","wrapperRefDepart","state","action","type","payload"],"mappings":";AAAA,MAAMA,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE,EADE;AAEfC,EAAAA,eAAe,EAAE,KAFF;AAGfC,EAAAA,UAAU,EAAEC,SAHG;AAIfC,EAAAA,aAAa,EAAE,EAJA;AAKfC,EAAAA,iBAAiB,EAAE,KALJ;AAMfC,EAAAA,gBAAgB,EAAEH;AANH,CAAnB;AASA,gBAAe,CAACI,KAAK,GAAGR,UAAT,EAAqBS,MAArB,KAAgC;AAC3C,MAAGA,MAAM,CAACC,IAAP,KAAgB,kBAAnB,EACI,yBAAWF,KAAX;AAAkBN,IAAAA,eAAe,EAAEO,MAAM,CAACE;AAA1C;AACJ,MAAGF,MAAM,CAACC,IAAP,KAAgB,cAAnB,EACI,yBAAWF,KAAX;AAAkBP,IAAAA,WAAW,EAAEQ,MAAM,CAACE;AAAtC;AACJ,MAAGF,MAAM,CAACC,IAAP,KAAgB,uBAAnB,EACI,yBAAWF,KAAX;AAAkBL,IAAAA,UAAU,EAAEM,MAAM,CAACE;AAArC;AACJ,MAAGF,MAAM,CAACC,IAAP,KAAgB,oBAAnB,EACI,yBAAWF,KAAX;AAAkBF,IAAAA,iBAAiB,EAAEG,MAAM,CAACE;AAA5C;AACJ,MAAGF,MAAM,CAACC,IAAP,KAAgB,gBAAnB,EACI,yBAAWF,KAAX;AAAkBH,IAAAA,aAAa,EAAEI,MAAM,CAACE;AAAxC;AACJ,MAAGF,MAAM,CAACC,IAAP,KAAgB,yBAAnB,EACI,yBAAWF,KAAX;AAAkBD,IAAAA,gBAAgB,EAAEE,MAAM,CAACE;AAA3C,KADJ,KAEK,OAAOH,KAAP;AACR,CAdD","sourcesContent":["const STATE_INIT = {\r\n    arrivalDate: [],\r\n    arrivalCalendar: false,\r\n    wrapperRef: undefined,\r\n    departureDate: [],\r\n    departureCalendar: false,\r\n    wrapperRefDepart: undefined\r\n};\r\n\r\nexport default (state = STATE_INIT, action) => {\r\n    if(action.type === 'ARRIVAL_CALENDAR')\r\n        return {...state, arrivalCalendar: action.payload};\r\n    if(action.type === 'ARRIVAL_DATE')\r\n        return {...state, arrivalDate: action.payload};\r\n    if(action.type === 'ARRIVAL_CALENDAR_NODE')\r\n        return {...state, wrapperRef: action.payload};\r\n    if(action.type === 'DEPARTURE_CALENDAR')\r\n        return {...state, departureCalendar: action.payload};\r\n    if(action.type === 'DEPARTURE_DATE')\r\n        return {...state, departureDate: action.payload};\r\n    if(action.type === 'DEPARTURE_CALENDAR_NODE')\r\n        return {...state, wrapperRefDepart: action.payload};\r\n    else return state;\r\n}"]},"metadata":{},"sourceType":"module"}