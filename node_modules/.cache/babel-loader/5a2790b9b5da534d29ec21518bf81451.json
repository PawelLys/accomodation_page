{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pawel\\\\Desktop\\\\programowanie\\\\projGit\\\\accomodationPage\\\\src\\\\components\\\\ContactForm.js\";\nimport React from 'react';\nimport { Field, reduxForm, reset } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { mealsIncludeReset } from './actions';\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: true,\n      displayAfterSubmitting: false,\n      phoneNumberDigitsWarning: false\n    };\n\n    this.componentWillUnmount = () => {};\n\n    this.renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\n\n    this.renderElement = formProps => {\n      const meta = formProps.meta;\n      if (formProps.input.name === 'email') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Your email:\", React.createElement(\"input\", Object.assign({\n        type: \"email\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })));else if (formProps.input.name === 'country') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Your country of residence:\", React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })));else if (formProps.input.name === 'phoneNumber') return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Your phone number:\", React.createElement(\"input\", Object.assign({\n        type: \"number\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-date_item-phonewarning\",\n        style: this.renderError(meta) === 'Phone number should have 9 digits' ? {\n          visibility: 'visible',\n          opacity: '1'\n        } : {\n          visibility: 'hidden',\n          opacity: '0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"iconify\",\n        \"data-icon\": \"ant-design:warning-twotone\",\n        \"data-inline\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), this.renderError(meta)));else if (formProps.input.name === 'message') return React.createElement(\"div\", {\n        className: \"feedback_form-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Your message:\", React.createElement(\"textarea\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Contact us\"));else return React.createElement(\"div\", {\n        className: \"form-date_item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, formProps.label, React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: this.renderError(meta),\n        className: meta.touched && meta.error && !meta.active ? 'red-background' : ''\n      }, formProps.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })));\n    };\n\n    this.onSubmitBtn = formValues => {\n      console.log(formValues);\n      this.setState({\n        displayAfterSubmitting: true\n      });\n    };\n\n    this.displayIntroText = () => {\n      if (this.state.displayAfterSubmitting) return React.createElement(\"div\", {\n        className: \"feedback_aftertext\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Thank you for message.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"In the next 24h someone from our staff will get in touch with you.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"We also would like to inform, that any unserious message or spam will be ignored.\"), React.createElement(\"span\", {\n        onClick: () => this.setState({\n          displayAfterSubmitting: false\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"ion-icon\", {\n        name: \"arrow-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \"Return\"));else return React.createElement(\"div\", {\n        className: \"feedback_intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Any questions? If so then we would gladly clarify everything for you.\");\n    };\n\n    this.props.navChangeStyle(false);\n    this.props.hoverNav(false);\n    this.props.headerAccepted(true);\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.displayIntroText(), React.createElement(\"form\", {\n      className: \"feedback_form\",\n      onSubmit: this.props.handleSubmit(this.onSubmitBtn.bind(this)),\n      style: this.state.displayAfterSubmitting ? {\n        display: 'none'\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"firstName\",\n      component: this.renderElement,\n      label: \"Your first name:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"lastName\",\n      component: this.renderElement,\n      label: \"Your last name:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-date_item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Your gender:\", React.createElement(\"div\", {\n      className: \"form-date_item-gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"male\",\n      checked: this.state.isChecked,\n      onClick: () => this.setState({\n        isChecked: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), \"Male\", React.createElement(Field, {\n      name: \"gender\",\n      component: \"input\",\n      type: \"radio\",\n      value: \"female\",\n      checked: !this.state.isChecked,\n      onClick: () => this.setState({\n        isChecked: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), \"Female\")), React.createElement(Field, {\n      name: \"email\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"country\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"phoneNumber\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"message\",\n      component: this.renderElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\n\nconst validate = formValues => {\n  const error = {};\n  if (!formValues.firstName) error.firstName = 'Input your first name here';\n  if (!formValues.lastName) error.lastName = 'Input your last name here';\n  if (!formValues.email) error.email = 'Input your email here';\n  if (!formValues.country) error.country = 'Input your country here';\n  if (!formValues.phoneNumber) error.phoneNumber = 'Input your phone number here';else {\n    if (formValues.phoneNumber.length !== 9) error.phoneNumber = 'Phone number should have 9 digits';\n  }\n  ;\n  if (!formValues.message) error.message = 'Input your message here';\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    userAcc: state.hoverConfig\n  };\n};\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('ContactForm'));\n\nconst formWrapped = reduxForm({\n  form: 'ContactForm',\n  onSubmitSuccess: afterSubmit,\n  validate\n})(ContactForm);\nexport default connect(mapStateToProps, {\n  mealsIncludeReset\n})(formWrapped);","map":{"version":3,"sources":["C:\\Users\\Pawel\\Desktop\\programowanie\\projGit\\accomodationPage\\src\\components\\ContactForm.js"],"names":["React","Field","reduxForm","reset","connect","mealsIncludeReset","ContactForm","Component","constructor","props","state","isChecked","displayAfterSubmitting","phoneNumberDigitsWarning","componentWillUnmount","renderError","meta","touched","error","active","renderElement","formProps","input","name","visibility","opacity","label","onSubmitBtn","formValues","console","log","setState","displayIntroText","navChangeStyle","hoverNav","headerAccepted","render","handleSubmit","bind","display","validate","firstName","lastName","email","country","phoneNumber","length","message","mapStateToProps","userAcc","hoverConfig","afterSubmit","result","dispatch","formWrapped","form","onSubmitSuccess"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { mealsIncludeReset } from './actions';\r\n\r\nclass ContactForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.navChangeStyle(false);\r\n        this.props.hoverNav(false);\r\n        this.props.headerAccepted(true);\r\n    };\r\n\r\n    state = {  isChecked: true, displayAfterSubmitting: false, phoneNumberDigitsWarning: false  };\r\n\r\n    componentWillUnmount = () => {\r\n\r\n    }\r\n\r\n    renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\r\n\r\n    renderElement = formProps => {\r\n        const { meta } = formProps;\r\n        if (formProps.input.name === 'email')\r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your email:<input type=\"email\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'country') \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your country of residence:<input type=\"text\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'phoneNumber') \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    Your phone number:<input type=\"number\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                    <div className=\"form-date_item-phonewarning\"\r\n                        style={this.renderError(meta) === 'Phone number should have 9 digits' \r\n                            ? {visibility: 'visible', opacity: '1'} : {visibility: 'hidden', opacity: '0'}\r\n                        }\r\n                    >\r\n                        <span className=\"iconify\" data-icon=\"ant-design:warning-twotone\" data-inline=\"false\"/>\r\n                        {this.renderError(meta)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'message') \r\n            return (\r\n                <div className=\"feedback_form-message\">\r\n                    Your message:<textarea type=\"text\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                    <button className=\"form-btn\">Contact us</button>\r\n                </div>\r\n            );\r\n        else \r\n            return (\r\n                <div className=\"form-date_item\">\r\n                    {formProps.label}<input type=\"text\" placeholder={this.renderError(meta)}\r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}\r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n    };\r\n\r\n    onSubmitBtn = formValues => {\r\n        console.log(formValues);\r\n        this.setState({ displayAfterSubmitting: true });\r\n    };\r\n\r\n    displayIntroText = () => {\r\n        if(this.state.displayAfterSubmitting) \r\n            return (\r\n                <div className=\"feedback_aftertext\">\r\n                    <p>Thank you for message.</p>\r\n                    <p>In the next 24h someone from our staff will get in touch with you.</p>\r\n                    <p>We also would like to inform, that any unserious message or spam will be ignored.</p>\r\n                    <span onClick={() => this.setState({ displayAfterSubmitting: false })}>\r\n                        <ion-icon name=\"arrow-back\"></ion-icon>Return\r\n                    </span>\r\n                </div>\r\n            ) \r\n        else return (\r\n                <div className=\"feedback_intro\">\r\n                    Any questions? If so then we would gladly clarify everything for you.\r\n                </div>\r\n            );\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <section className=\"feedback\"> \r\n                {this.displayIntroText()}\r\n                <form className=\"feedback_form\" onSubmit={this.props.handleSubmit(this.onSubmitBtn.bind(this))}\r\n                    style={this.state.displayAfterSubmitting ? {display: 'none'} : {}}\r\n                >\r\n                    <div className=\"form-date\">\r\n                        <Field name=\"firstName\" component={this.renderElement} label=\"Your first name:\" />\r\n                        <Field name=\"lastName\" component={this.renderElement} label=\"Your last name:\" />\r\n                        <div className=\"form-date_item\">Your gender: \r\n                            <div className=\"form-date_item-gender\">\r\n                                <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"male\" \r\n                                    checked={this.state.isChecked}  onClick={() => this.setState({ isChecked: true })} \r\n                                />Male\r\n                                <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"female\" \r\n                                    checked={!this.state.isChecked} onClick={() => this.setState({ isChecked: false })} \r\n                                />Female\r\n                            </div>\r\n                        </div>\r\n                        <Field name=\"email\" component={this.renderElement} />\r\n                        <Field name=\"country\" component={this.renderElement} />\r\n                        <Field name=\"phoneNumber\" component={this.renderElement} />\r\n                    </div>\r\n                    <Field name=\"message\" component={this.renderElement} />\r\n                </form>\r\n            </section>\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = formValues => {\r\n    const error = {};\r\n\r\n    if(!formValues.firstName) error.firstName = 'Input your first name here';\r\n    if(!formValues.lastName) error.lastName = 'Input your last name here';\r\n    if(!formValues.email) error.email = 'Input your email here';\r\n    if(!formValues.country) error.country = 'Input your country here';\r\n    if(!formValues.phoneNumber) error.phoneNumber = 'Input your phone number here';\r\n    else {\r\n        if(formValues.phoneNumber.length !== 9) error.phoneNumber = 'Phone number should have 9 digits';\r\n    };\r\n    if(!formValues.message) error.message = 'Input your message here';\r\n\r\n    return error;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { userAcc: state.hoverConfig };\r\n};\r\n\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('ContactForm'));\r\n\r\nconst formWrapped = reduxForm({\r\n    form: 'ContactForm', onSubmitSuccess: afterSubmit, validate\r\n})(ContactForm);\r\n\r\nexport default connect(mapStateToProps, { mealsIncludeReset })(formWrapped);"]},"metadata":{},"sourceType":"module"}